<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
	<mapper namespace="GoodsMapper">
	
		<resultMap type="Goods" id="goodsResultMap">
			
			<id property="ID" column="ID"/>
			<result property="D_NAME" column="D_NAME"/>
			<result property="C_BRAND" column="C_BRAND"/>
			<result property="C_WEIGHT" column="C_WEIGHT"/>
			<result property="P_COUNT" column="P_COUNT"/>
			<result property="P_MATCOUNT" column="P_MATCOUNT"/>
			<result property="START_ADDRESS" column="START_ADDRESS"/>
			<result property="START_TIME" column="START_TIME"/>
			<result property="ADDRESS" column="ADDRESS"/>
			<result property="END_TIME" column="END_TIME"/>
			<result property="STATE" column="STATE"/>
			<result property="D_ID" column="D_ID"/>
			<result property="C_ID" column="C_ID"/>
			<result property="P_ID" column="P_ID"/>
			
		</resultMap>
		
	<!--表名 -->
	<sql id="tableName">
		goods
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		ID,
		D_NAME,
		C_BRAND,
		C_WEIGHT,
		P_COUNT,
		P_MATCOUNT,
		START_ADDRESS,
		START_TIME,
		ADDRESS,
		END_TIME,
		STATE,
		D_ID,
		C_ID,
		P_ID
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
		#{ID},
		#{D_NAME},
		#{C_BRAND},
		#{C_WEIGHT},
		#{P_COUNT},
		#{P_MATCOUNT},
		#{START_ADDRESS},
		#{START_TIME},
		#{ADDRESS},
		#{END_TIME},
		#{STATE},
		#{D_ID},
		#{C_ID},
		#{P_ID}
	</sql>
	
	<!-- 新增 -->
	<insert id="saveU" parameterType="pd" >
		insert into <include refid="tableName"></include> (
			<include refid="Field"></include>
		) values (
			<include refid="FieldValue"></include>
		)
	</insert>
	
	<!-- 查询 -->
	<select id="datalistPage" parameterType="page" resultType="pd" >
		select  i.ID,
				i.D_NAME,
				i.C_BRAND,
				i.C_WEIGHT,
				i.P_COUNT,
				i.P_MATCOUNT,
				i.START_ADDRESS,
				i.START_TIME,
				i.ADDRESS,
				i.END_TIME,
				i.STATE,
				i.D_ID,
				i.C_ID,
				i.P_ID
		from <include refid="tableName"></include> i
		<where>
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
		
				(
					 i.D_NAME LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
					 i.C_BRAND LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
					 or
					 i.P_COUNT LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or
					 i.START_ADDRESS LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or
					 i.ADDRESS LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
				)
		</if>
		<if test="pd.STATE != null">
			and i.STATE LIKE CONCAT(CONCAT('%', #{pd.state}),'%')
		</if>
		<if test="pd.lastStart!=null and pd.lastStart!=''">
			and i.START_TIME &gt;= #{pd.lastStart} 
		</if>
		<if test="pd.lastEnd!=null and pd.lastEnd!=''">
			and i.START_TIME &lt;= #{pd.lastEnd} 
		</if>
		</where>
		order by i.START_TIME desc
	</select>
	
	<!-- 获取总数 -->
	<select id="getCount" parameterType="String" resultType="pd">
		select 
			count(id) inventoryCount
		from 
		<include refid="tableName"></include>
	</select>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd" >
		select 
			<include refid="Field"></include>
		from 
			<include refid="tableName"></include>
		where 
			ID = #{ID}
	</select>
	
	<!-- 修改 -->
	<update id="editU" parameterType="pd" >
		update  <include refid="tableName"></include>
			set D_NAME                  =#{D_NAME},
				C_BRAND				    =#{C_BRAND},
				C_WEIGHT				=#{C_WEIGHT},
				P_COUNT					=#{P_COUNT},
				P_MATCOUNT				=#{P_MATCOUNT},
				START_ADDRESS			=#{START_ADDRESS},
				ADDRESS					=#{ADDRESS},
				D_ID					=#{D_ID},
				C_ID					=#{C_ID},
				P_ID					=#{P_ID}
			where 
				ID = #{ID}
	</update>
	
	<!-- 修改状态 -->
	<update id="editState1" parameterType="pd" >
		update  <include refid="tableName"></include>
			set STATE 				= #{STATE},
				START_TIME			=#{START_TIME}
			where 
				ID = #{ID}
	</update>
	
	<!-- 修改状态 -->
	<update id="editState2" parameterType="pd" >
		update  <include refid="tableName"></include>
			set STATE 				= #{STATE},
				END_TIME			= #{END_TIME}
			where 
				ID = #{ID}
	</update>
	
	<!-- 修改状态 -->
	<update id="edit2" parameterType="pd" >
		update  PICKING
			set STATE 				= #{STATE}
			where 
				ID = #{P_ID}
	</update>
	
	<!-- 修改状态 -->
	<update id="edit3" parameterType="pd" >
		update  PICKING
			set STATE 				= 1
			where 
				ID in
  			 <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                  #{item}
             </foreach>
	</update>
	
	<!-- 删除 -->
	<delete id="deleteU" parameterType="pd" flushCache="false">
		delete from <include refid="tableName"></include>
		where 
			ID = #{ID}
	</delete>
	
	<!-- 批量删除 -->
	<delete id="deleteAllU" parameterType="String" >
		delete from <include refid="tableName"></include>
		where 
			ID in
  			 <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                  #{item}
             </foreach>
	</delete>
	
	</mapper>