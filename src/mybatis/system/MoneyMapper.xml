<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="MoneyMapper">
	
<!-- 	物质表名 -->
	<sql id="tableName">
		materials_information
	</sql>
	<!-- 费用表名 -->
	<sql id="moneyTableName">
		money
	</sql>
	<!-- 供应商表 -->
	<sql id="S_C_TableName">
		supplier_customer
	</sql>
	<!-- 分类表  -->
	<sql id="C_C_TableName">
		customer_categories
	</sql>
	<!-- 出入库表  -->
	<sql id="O_TableName">
		output_storage
	</sql>
	<!-- 退货入库表  -->
	<sql id="s_TableName">
		sales_return
	</sql>
	<!-- 退货费用表  -->
	<sql id="moneytotal_TableName">
		money_total
	</sql>
	<!-- 费用规则表  -->
	<sql id="prm_TableName">
		price_money
	</sql>
	<!-- 	费用字段 -->
	<sql id="Field">
		ID,
		PRODUCT_ID,
		MO_TIME,
		MONEY,
		STORAGE_STATE,
		RICHARD_STATE,
		LOADING_STATE,
		UNLOADING_STATE
	</sql>
	<!-- 	费用字段值 -->
	<sql id="FieldValue">
		#{ID},
		#{PRODUCT_ID},
		#{MO_TIME},
		#{MONEY},
		#{STORAGE_STATE},
		#{RICHARD_STATE},
		#{LOADING_STATE},
		#{UNLOADING_STATE}
		
	</sql>
	<!-- 修改money -->
	<update id="moneyeditU" parameterType="pd" >
		update  <include refid="moneyTableName"></include>
			set MONEY 					= #{MONEY}
				where PRODUCT_ID      =#{PRODUCT_ID} 
	</update>
	<!-- 修改物质状态改成出库 -->
	<update id="maeditU" parameterType="pd" >
		update  <include refid="tableName"></include>
			set STATE 					= 2
				where ID      =#{PRODUCT_ID} 
	</update>
	<!-- 修改出货单的money -->
	<update id="OuteditU" parameterType="pd" >
		update  <include refid="O_TableName"></include>
			set MONEY 					= #{MONEY}
				where ID      =#{ID} 
	</update>
	<!-- 	新增 退货费用表-->
	<insert id="totalsaveU" parameterType="pd">
		insert into <include refid="moneytotal_TableName"></include> (
			<include refid="Field"></include>, STATE
		) values (
			<include refid="FieldValue"></include>,#{STATE}
		)
	</insert>
	<!-- 修改 退货费用表-->
	<update id="totaleditU" parameterType="pd" >
		update  <include refid="moneytotal_TableName"></include>
			set MONEY 					= #{MONEY},
				STORAGE_STATE 				= #{STORAGE_STATE},
				RICHARD_STATE 				= #{RICHARD_STATE},
				LOADING_STATE 				= #{LOADING_STATE},
				UNLOADING_STATE 				= #{UNLOADING_STATE}
				where PRODUCT_ID      =#{PRODUCT_ID} 
	</update>
	<!-- 查询费用 -->
	<select id="moneys" parameterType="pd" resultType="pd" >
		select ma.COUNT,m.MONEY from <include refid="tableName"></include> ma,<include refid="moneyTableName"></include> m where ma.ID=m.PRODUCT_ID and ma.ID=#{ID}
	</select> 
	<!-- 查询费用 -->
	<select id="outmoney" parameterType="pd" resultType="pd" >
		select m.MONEY,m.PRODUCT_ID from <include refid="moneyTableName"></include> m,<include refid="O_TableName"></include> ou where ou.MATERIALS_ID=m.PRODUCT_ID and ou.ID=#{ID}
	</select> 
	<!--出入库查询实际库存 -->
	<select id="numbers" parameterType="pd" resultType="int" >
		select 
			m.COUNT
		from 
			<include refid="O_TableName"></include> o,<include refid="tableName"></include> m
			where o.BIANHAO = #{OUT_CODE} and o.MATERIALS_ID=m.ID
	</select> 
	<!-- 查询退货个数和数量 -->
	<select id="countsum" parameterType="pd" resultType="pd" >
		select count(ID) ID, SUM(COUNT) COUNT from <include refid="s_TableName"></include> where OUT_CODE=#{OUT_CODE}
	</select> 
<!-- 	新增 -->
	<insert id="saveU" parameterType="pd" >
		insert into <include refid="moneyTableName"></include> (
			<include refid="Field"></include>
		) values (
			<include refid="FieldValue"></include>
		)
	</insert>
	<!-- 通过PRODUCT_ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd" >
		select 
			<include refid="Field"></include>
		from 
			<include refid="moneyTableName"></include> 
			where PRODUCT_ID = #{PRODUCT_ID}
		
	</select> 
	<!-- 列表 -->
	<select id="mlistPage" parameterType="page" resultType="pd" >
		select  ma.ID maID,
		ma.BIANHAO,
		ma.NAME maNAME,
		ma.CUS_ID,
		ma.COUNT,
		ma.STATE,
		m.ID mID,
		m.PRODUCT_ID,
		m.MO_TIME,
		m.MONEY,
		sc.ID scID,
		sc.SUPNAME,
		cc.ID ccID,
		cc.NAME ccNAME,
		pr.ARTIFICIAL * ma.COUNT ARTIFICIALS
		from <include refid="tableName"></include> ma,<include refid="moneyTableName"></include> m,
			 <include refid="S_C_TableName"></include> sc,<include refid="C_C_TableName"></include> cc,
			<include refid="prm_TableName"></include> pr
			 where ma.ID = m.PRODUCT_ID and ma.CUS_ID = sc.ID and sc.CATEGORIES_ID=cc.ID and m.PRICE_ID=pr.PRICE_ID and ma.STATE=#{pd.STATE}
			 <choose>
			<when test="pd.boos=='true'">
			and m.MO_TIME &gt;=CONCAT(#{pd.MO_TIME},'-01-01 00:00:00') and m.MO_TIME &lt;= CONCAT(#{pd.MO_TIME},'-06-30 23:59:59')
			</when>
			<when test="pd.boos=='false'"> 
			and m.MO_TIME &gt;=#{pd.MO_TIME}'-07-01 00:00:00' and m.MO_TIME &lt;= #{pd.MO_TIME}'-12-30 23:59:59'
			</when>
			<otherwise>
			and m.MO_TIME LIKE CONCAT(CONCAT('', #{pd.MO_TIME}),'%')
			</otherwise>
		</choose>
	</select>
	<!-- 总money -->
	<select id="mlistsum" parameterType="pd" resultType="pd" >
		select  
		sum(m.MONEY) MONEYS
		from <include refid="tableName"></include> ma,<include refid="moneyTableName"></include> m,
			 <include refid="S_C_TableName"></include> sc,<include refid="C_C_TableName"></include> cc
			 where ma.ID = m.PRODUCT_ID and ma.CUS_ID = sc.ID and sc.CATEGORIES_ID=cc.ID and ma.STATE=#{STATE}
			 <choose>
			<when test="boos=='true'">
			and m.MO_TIME &gt;=CONCAT(#{MO_TIME},'-01-01 00:00:00') and m.MO_TIME &lt;= CONCAT(#{MO_TIME},'-06-30 23:59:59')
			</when>
			<when test="boos=='false'"> 
			and m.MO_TIME &gt;=#{MO_TIME}'-07-01 00:00:00' and m.MO_TIME &lt;= #{MO_TIME}'-12-30 23:59:59'
			</when>
			<otherwise>
			and m.MO_TIME LIKE CONCAT(CONCAT('', #{MO_TIME}),'%')
			</otherwise>
		</choose>
	</select>
	<!-- 修改 -->
	<update id="editU" parameterType="pd" >
		update  <include refid="moneyTableName"></include>
			set MONEY 					= #{MONEY},
				STORAGE_STATE 				= #{STORAGE_STATE},
				RICHARD_STATE 				= #{RICHARD_STATE},
				LOADING_STATE 				= #{LOADING_STATE},
				UNLOADING_STATE 				= #{UNLOADING_STATE}
				where PRODUCT_ID      =#{PRODUCT_ID} 
	</update>
	
	<!-- 删除用-->
	<delete id="deleteU" parameterType="pd" flushCache="false">
		delete from <include refid="tableName"></include>
		
	</delete>
	<!-- 批量删除 -->
	<delete id="deleteAllU" parameterType="String" >
		delete from <include refid="tableName"></include>
		where 
			MSGID in
  			 <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                  #{item}
             </foreach>
	</delete>
</mapper>